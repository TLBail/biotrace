{% extends "base.jinja" %}
{% block title %}Fichier de configuration de la webdync{% endblock title %}
{% block head %}
<link rel="stylesheet" type="text/css" href="{{ url_for('static',filename='styles/webdynconfig.css') }}">
{% endblock head %}
{% block content %}
<h1 class="text-center">Sauvegarde de la webdyn</h1>
<hr />
<div class="container">
	<div class="row">
		<div class="col-12 col-lg-4">
			<fieldset class="border p-2">
				<legend class="float-none w-auto">Réglage du système de sauvegarde</legend>
				<div class="input-group pb-3">
					<span class="input-group-text">Fréquence de sauvegarde</span>
					<input type="number" class="form-control" id="save_frequency" value={{ webdynconfig.save_frequency }}>
					<span class="input-group-text">jours</span>
				</div>

				<div class="input-group pb-3">
					<span class="input-group-text">Durée de conservation</span>
					<input type="number" class="form-control" id="file_retention_period" value={{ webdynconfig.file_retention_period }}>
					<span class="input-group-text">jours</span>
				</div>

				<div class="input-group pb-3">
					<span class="input-group-text">Nombre de fichiers</span>
					<input type="number" class="form-control" id="nb_files" value={{ webdynconfig.nb_files }}>
				</div>

				<div class="mt-auto">
					<button type="button" class="p-1 btn w-100 btn-primary" onclick="sendConfig()">Enregistrer</button>
				</div>
			</fieldset>

			<fieldset class="border p-2">
				<legend class="float-none w-auto">Configs de la webdyn</legend>

				<div class="mt-auto pb-3">
					<button type="button" class="p-1 btn w-100 btn-primary" id="get-config-btn">Télécharger la config actuelle</button>
				</div>
				<div class="container" style="max-height: 250px; overflow-y: scroll;">
					<div class="row gy-3 card-container">
						{% for c in configs %}
						<div class="card config" data-id="{{ c.id }}">
							<div class="card-body">
								<h6 class="card-title">
									{{ c.name }}
								</h6>
								<p class="card-text">{{ c.createdAt }} ({{ c.updatedAt }})</p>
							</div>
						</div>
						{% else %}
						<p>Aucune configuration trouvée</p>
						{% endfor %}
					</div>
				</div>
			</fieldset>
			<template id="card-template">
				<div class="card config" data-id="">
					<div class="card-body">
						<h6 class="card-title"></h6>
						<p class="card-text"></p>
					</div>
				</div>
			</template>
		</div>
		<div class="col-12 col-lg-8">
			<fieldset class="border p-2 h-100" id="config-fieldset" style="position: relative;">
				<legend class="float-none w-auto">Fichier de configuration</legend>
				<monaco-editor value="{{ last_config.content }}" interactions="true"></monaco-editor>
			</fieldset>
		</div>
	</div>
</div>

<script>
	var require = { paths: { 'vs': '/static/vs' } };

	const configs = {{ configs | tojson }};

	window.configs = configs;

	console.log(configs)
</script>
<script>
	function sendConfig(){
		saveContent();
	}

	async function saveContent() {
		const response = await fetch('/api/config/webdynconfig', {
			method: 'POST',
			headers: {
				'Content-Type': 'application/json'
			},
			body: JSON.stringify({
				"save_frequency": document.getElementById("save_frequency").value,
				"nb_files": document.getElementById("nb_files").value,
				"file_retention_period": document.getElementById("file_retention_period").value,
			})
		});



		await response.json().then(data => {
			pushToast(COLORS.INFO, "Configuration enregistrée");
		}).catch(err => {
			console.error(err);
			pushToast(COLORS.DANGER, "Erreur lors de l'enregistrement de la configuration");
		})
	}
</script>
<script src="/static/vs/loader.js"></script>
<script src="/static/vs/editor/editor.main.nls.js"></script>
<script src="/static/vs/editor/editor.main.js"></script>
<script src="{{ url_for('static',filename='scripts/webdynconfig/cards.js') }}" type="module" defer></script>
{% endblock content %}