{% extends "base.jinja" %}
{% block title %}Suivi des logs{% endblock title %}
{% block head %}
<link rel="stylesheet/less" type="text/css" href="{{ url_for('static',filename='styles/suivilogs.less') }}">
{% endblock head %}
{% block content %}
<div class="container">
	<div class="row">
		<div class="col-12 col-lg-4">
			<fieldset class="border p-2">
				<legend class="float-none w-auto">Réglage du système de sauvegarde</legend>
				<div class="input-group pb-3">
					<span class="input-group-text">Durée de conservation</span>
					<input type="number" class="form-control" id="file_retention_period" value="{{ config }}">
					<span class="input-group-text">jours</span>
				</div>
				<div class="mt-auto">
					<button type="button" class="p-1 btn w-100 btn-primary" onclick="sendConfig()">Enregistrer</button>
				</div>
			</fieldset>

			<fieldset class="border p-2">
				<legend class="float-none w-auto">Logs de la webdyn</legend>

				<div class="container" style="height: 300px; overflow-y: scroll;">
					<div class="row gy-3 card-container">
						{% for c in logs %}
						<div class="card log" data-id="{{ c.id }}">
							<div class="card-body">
								<h6 class="card-title">
									{{ c.name }}
								</h6>
								<p class="card-text">{{ c.createdAt }}</p>
							</div>
						</div>
						{% else %}
						<p>Aucune log trouvée</p>
						{% endfor %}
					</div>
				</div>
			</fieldset>
		</div>
		<div class="col-12 col-lg-8">
			<fieldset class="border p-2 h-100" id="config-fieldset" style="position: relative;">
				<legend class="float-none w-auto">Fichier logs</legend>
				<table class="table table-striped scroll">
					<thead>
						<tr>
							<th scope="col">Date</th>
							<th scope="col">Application</th>
						</tr>
					</thead>
					<tbody id="table">
					</tbody>
				</table>
			</fieldset>
		</div>

		<div class="col-12">
			<fieldset class="border p-2 h-100" id="config-fieldset" style="position: relative;">
				<legend class="float-none w-auto">Erreur(s) détectée</legend>
				<div id="errors-content">
				</div>
			</fieldset>
		</div>
	</div>

</div>
{% endblock content %}
{% block scripts %}
<script>
	const logs = {{ logs | tojson }};
	window.logs = logs;

	let errors_wrapper = document.querySelector('#errors-content');

	logs.forEach(log => {
		log.content.forEach(content => {
			if (content.failed) {
				let error = document.createElement('div');
				error.classList.add('alert', 'alert-danger');
				error.innerHTML = log.name + ": " + content.application;
				errors_wrapper.appendChild(error);
			}
		})
	})

	console.log(logs)
</script>
<script>
	function sendConfig() {
		saveContent()
	}

	async function saveContent() {
		const response = await fetch('/api/config/logconfig', {
			method: 'POST',
			headers: {
				'Content-Type': 'application/json'
			},
			body: JSON.stringify({
				"file_retention_period": document.getElementById("file_retention_period").value,
			})
		});

		await response.json().then(data => {
			pushToast(COLORS.INFO, "Configuration enregistrée");
		}).catch(err => {
			console.error(err);
			pushToast(COLORS.DANGER, "Erreur lors de l'enregistrement de la configuration");
		})
	}
</script>
<script src="{{ url_for('static',filename='scripts/suivilogs/cards.js') }}" type="module" defer></script>
{% endblock scripts %}